// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace LightNap.Scaffolding.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\edkai\source\repos\SharpLogic\LightNap\src\Scaffolding\LightNap.Scaffolding\Templates\Front-End\Area\Components\Pages\Edit\EditHtml.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class EditHtml : LightNap.Scaffolding.Templates.BaseTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n<p-card header=\"Edit\">\r\n  <api-response [apiResponse]=\"");
            
            #line 8 "C:\Users\edkai\source\repos\SharpLogic\LightNap\src\Scaffolding\LightNap.Scaffolding\Templates\Front-End\Area\Components\Pages\Edit\EditHtml.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Parameters.CamelName));
            
            #line default
            #line hidden
            this.Write("$\" errorMessage=\"Error loading\" loadingMessage=\"Loading...\">\r\n    <ng-template #s" +
                    "uccess let-");
            
            #line 9 "C:\Users\edkai\source\repos\SharpLogic\LightNap\src\Scaffolding\LightNap.Scaffolding\Templates\Front-End\Area\Components\Pages\Edit\EditHtml.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Parameters.CamelName));
            
            #line default
            #line hidden
            this.Write(@">
      <div class=""flex gap-1 mb-1"">
        <p-button [routerLink]=""['../..']"" icon=""pi pi-arrow-up"" label=""Up to all"" />
        <p-button [routerLink]=""['..']"" icon=""pi pi-arrow-left"" label=""Back to item"" />
        <p-button (onClick)=""deleteClicked($event)"" severity=""danger"" icon=""pi pi-trash"" label=""Delete"" />
        <confirm-popup key=""delete"" confirmSeverity=""danger"" confirmIcon=""pi pi-trash"" />
      </div>
      <form [formGroup]=""form"" (ngSubmit)=""saveClicked()"" autocomplete=""off"">
        <div class=""flex flex-column gap-1"">
          <textarea rows=""10"" cols=""30"" pInputTextarea formControlName=""json""></textarea>
          <error-list [errors]=""errors"" />
          <p-button type=""submit"" label=""Save"" icon=""pi pi-save"" severity=""success"" [disabled]=""!form.valid"" />
        </div>
      </form>
    </ng-template>
  </api-response>
</p-card>
");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
